//------------------------------------
#ifndef __codegeneration_cg2dg__
#define __codegeneration_cg2dg__
//------------------------------------

// Automatically generated by codegeneration/project_cg_dg.py
//
// Generates the matrices CG2toDG[dg]
// - Realizes the projection of a CG2 vector into the DG[dg] space
//   dg = CG2toDG[dg] * cg

//------------------------------ CGtoDG

static const Eigen::Matrix<double, 3, 4, Eigen::RowMajor> CG1_to_DG1 = (Eigen::Matrix<double, 3, 4, Eigen::RowMajor>() << 0.25, 0.25, 0.25, 0.25, -0.5, 0.5000000000000001, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5).finished();

static const Eigen::Matrix<double, 3, 9, Eigen::RowMajor> CG2_to_DG1 = (Eigen::Matrix<double, 3, 9, Eigen::RowMajor>() << 0.02777777777777779, 0.11111111111111113, 0.02777777777777779, 0.11111111111111113, 0.4444444444444444, 0.11111111111111113, 0.02777777777777779, 0.11111111111111113, 0.02777777777777779, -0.16666666666666674, 2.6020852139652106e-18, 0.16666666666666674, -0.6666666666666667, -1.0408340855860843e-17, 0.6666666666666667, -0.16666666666666674, 0.0, 0.16666666666666674, -0.16666666666666674, -0.6666666666666667, -0.16666666666666674, 0.0, 0.0, 0.0, 0.16666666666666674, 0.6666666666666667, 0.16666666666666674).finished();

static const Eigen::Matrix<double, 6, 4, Eigen::RowMajor> CG1_to_DG2 = (Eigen::Matrix<double, 6, 4, Eigen::RowMajor>() << 0.25, 0.25, 0.25, 0.25, -0.5, 0.5000000000000001, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 1.0245710529988017e-15, 7.806255641895632e-16, 1.0928757898653885e-15, 7.806255641895632e-16, 8.586881206085195e-16, 9.367506770274758e-16, 8.586881206085195e-16, 9.367506770274758e-16, 1.0000000000000004, -1.0000000000000004, -1.0000000000000004, 1.0000000000000004).finished();

static const Eigen::Matrix<double, 6, 9, Eigen::RowMajor> CG2_to_DG2 = (Eigen::Matrix<double, 6, 9, Eigen::RowMajor>() << 0.02777777777777779, 0.11111111111111113, 0.02777777777777779, 0.11111111111111113, 0.4444444444444444, 0.11111111111111113, 0.02777777777777779, 0.11111111111111113, 0.02777777777777779, -0.16666666666666674, 2.6020852139652106e-18, 0.16666666666666674, -0.6666666666666667, -1.0408340855860843e-17, 0.6666666666666667, -0.16666666666666674, 0.0, 0.16666666666666674, -0.16666666666666674, -0.6666666666666667, -0.16666666666666674, 0.0, 0.0, 0.0, 0.16666666666666674, 0.6666666666666667, 0.16666666666666674, 0.3333333333333336, -0.6666666666666664, 0.3333333333333336, 1.3333333333333344, -2.6666666666666647, 1.3333333333333344, 0.3333333333333336, -0.6666666666666662, 0.3333333333333336, 0.3333333333333336, 1.3333333333333344, 0.3333333333333336, -0.6666666666666663, -2.6666666666666647, -0.6666666666666664, 0.3333333333333336, 1.3333333333333344, 0.3333333333333336, 1.0000000000000002, -3.122502256758253e-17, -1.0000000000000002, 0.0, 0.0, 0.0, -1.0000000000000002, 6.245004513516506e-17, 1.0000000000000004).finished();

// Generates the matrices CG2toDG[dg]_dX and CG2toDG[dg]_dY
// - Realizes the projection of the derivative of a CG2 vector into the DG[dg] space
//   dg = CG2toDG[dg] * cg

//------------------------------ CG2toDG

static const Eigen::Matrix<double, 3, 4, Eigen::RowMajor> CG1_to_DG1_dX = (Eigen::Matrix<double, 3, 4, Eigen::RowMajor>() << -0.5, 0.5, -0.5, 0.5, -5.204170427930421e-18, 5.204170427930421e-18, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0).finished();
static const Eigen::Matrix<double, 3, 4, Eigen::RowMajor> CG1_to_DG1_dY = (Eigen::Matrix<double, 3, 4, Eigen::RowMajor>() << -0.5, -0.5, 0.5, 0.5, 1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0).finished();

static const Eigen::Matrix<double, 3, 9, Eigen::RowMajor> CG2_to_DG1_dX = (Eigen::Matrix<double, 3, 9, Eigen::RowMajor>() << -0.1666666666666667, 3.469446951953614e-18, 0.16666666666666669, -0.6666666666666666, -1.3877787807814457e-17, 0.6666666666666666, -0.1666666666666667, 0.0, 0.16666666666666669, 0.666666666666667, -1.3333333333333335, 0.666666666666667, 2.666666666666667, -5.333333333333333, 2.666666666666667, 0.666666666666667, -1.3333333333333335, 0.666666666666667, 1.0, 2.0816681711721685e-17, -1.0000000000000002, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0).finished();
static const Eigen::Matrix<double, 3, 9, Eigen::RowMajor> CG2_to_DG1_dY = (Eigen::Matrix<double, 3, 9, Eigen::RowMajor>() << -0.1666666666666667, -0.6666666666666665, -0.1666666666666667, 0.0, 0.0, 0.0, 0.16666666666666669, 0.6666666666666666, 0.16666666666666669, 1.0000000000000002, -3.122502256758253e-17, -1.0000000000000002, 0.0, 0.0, 0.0, -1.0, 4.163336342344337e-17, 1.0, 0.666666666666667, 2.666666666666667, 0.666666666666667, -1.3333333333333335, -5.333333333333333, -1.3333333333333335, 0.666666666666667, 2.666666666666667, 0.666666666666667).finished();

static const Eigen::Matrix<double, 6, 4, Eigen::RowMajor> CG1_to_DG2_dX = (Eigen::Matrix<double, 6, 4, Eigen::RowMajor>() << -0.5, 0.5, -0.5, 0.5, -5.204170427930421e-18, 5.204170427930421e-18, 0.0, 0.0, 1.0, -1.0, -1.0, 1.0, -1.3856103764364747e-15, 1.3856103764364747e-15, -1.5612511283791264e-15, 1.5612511283791264e-15, -1.8539857149502126e-15, 1.8539857149502126e-15, -1.8735013540549517e-15, 1.8735013540549517e-15, -3.122502256758253e-17, 3.122502256758253e-17, 0.0, 0.0).finished();
static const Eigen::Matrix<double, 6, 4, Eigen::RowMajor> CG1_to_DG2_dY = (Eigen::Matrix<double, 6, 4, Eigen::RowMajor>() << -0.5, -0.5, 0.5, 0.5, 1.0, -1.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -2.185751579730777e-15, -2.3418766925686896e-15, 2.185751579730777e-15, 2.3418766925686896e-15, -1.6783449630075609e-15, -1.717376241217039e-15, 1.6783449630075609e-15, 1.717376241217039e-15, 0.0, 0.0, 0.0, 0.0).finished();

static const Eigen::Matrix<double, 6, 9, Eigen::RowMajor> CG2_to_DG2_dX = (Eigen::Matrix<double, 6, 9, Eigen::RowMajor>() << -0.1666666666666667, 3.469446951953614e-18, 0.16666666666666669, -0.6666666666666666, -1.3877787807814457e-17, 0.6666666666666666, -0.1666666666666667, 0.0, 0.16666666666666669, 0.666666666666667, -1.3333333333333335, 0.666666666666667, 2.666666666666667, -5.333333333333333, 2.666666666666667, 0.666666666666667, -1.3333333333333335, 0.666666666666667, 1.0, 2.0816681711721685e-17, -1.0000000000000002, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0, -6.830473686658678e-16, -3.903127820947816e-17, 6.635317295611287e-16, -2.888314587501384e-15, -4.683753385137379e-16, 2.8102520310824275e-15, -8.196568423990414e-16, 0.0, 6.245004513516506e-16, -2.0000000000000013, -3.903127820947816e-17, 2.0000000000000013, 3.9999999999999964, 1.5612511283791264e-16, -3.999999999999997, -2.0000000000000018, 0.0, 2.0000000000000013, -4.000000000000002, 8.000000000000002, -4.000000000000002, 0.0, 0.0, 0.0, 4.000000000000002, -8.000000000000002, 4.000000000000002).finished();
static const Eigen::Matrix<double, 6, 9, Eigen::RowMajor> CG2_to_DG2_dY = (Eigen::Matrix<double, 6, 9, Eigen::RowMajor>() << -0.1666666666666667, -0.6666666666666665, -0.1666666666666667, 0.0, 0.0, 0.0, 0.16666666666666669, 0.6666666666666666, 0.16666666666666669, 1.0000000000000002, -3.122502256758253e-17, -1.0000000000000002, 0.0, 0.0, 0.0, -1.0, 4.163336342344337e-17, 1.0, 0.666666666666667, 2.666666666666667, 0.666666666666667, -1.3333333333333335, -5.333333333333333, -1.3333333333333335, 0.666666666666667, 2.666666666666667, 0.666666666666667, -2.0000000000000013, 3.9999999999999964, -2.0000000000000018, 0.0, 0.0, 0.0, 2.000000000000001, -3.999999999999997, 2.0000000000000013, -7.22078646875346e-16, -2.888314587501384e-15, -8.196568423990414e-16, 0.0, 0.0, 0.0, 8.196568423990414e-16, 2.4980018054066022e-15, 6.245004513516506e-16, -4.000000000000002, 0.0, 4.000000000000002, 8.000000000000002, 0.0, -8.000000000000002, -4.000000000000002, 0.0, 4.000000000000002).finished();

// Generates the matrices DG1_CG2_dX/Y for
// adding the DG1 - Stress tensor to the CG2 equation, e.g. for (S, nabla Phi)
// computed as += DG1_CG2_dX/Y * S11/12/22

//------------------------------ CG2toDG

static const Eigen::Matrix<double, 4, 3, Eigen::RowMajor> DG1_CG1_dX = (Eigen::Matrix<double, 4, 3, Eigen::RowMajor>() << -0.5, -4.336808689942018e-19, 0.08333333333333334, 0.5, 4.336808689942018e-19, -0.08333333333333334, -0.5, 0.0, -0.08333333333333334, 0.5, 0.0, 0.08333333333333334).finished();
static const Eigen::Matrix<double, 4, 3, Eigen::RowMajor> DG1_CG1_dY = (Eigen::Matrix<double, 4, 3, Eigen::RowMajor>() << -0.5, 0.08333333333333334, 0.0, -0.5, -0.08333333333333334, 0.0, 0.5, -0.08333333333333334, 0.0, 0.5, 0.08333333333333334, 0.0).finished();

static const Eigen::Matrix<double, 9, 3, Eigen::RowMajor> DG1_CG2_dX = (Eigen::Matrix<double, 9, 3, Eigen::RowMajor>() << -1.5000000000000004, 0.5000000000000002, 0.7500000000000001, 1.5612511283791264e-17, -0.5000000000000001, 7.806255641895632e-18, 1.5000000000000002, 0.5000000000000002, -0.7500000000000002, -3.0, 1.0000000000000002, 0.0, -3.122502256758253e-17, -1.0, 0.0, 3.0, 1.0, 0.0, -1.5000000000000004, 0.5000000000000002, -0.7500000000000001, 0.0, -0.5000000000000001, 0.0, 1.5000000000000002, 0.5000000000000002, 0.7500000000000001).finished();
static const Eigen::Matrix<double, 9, 3, Eigen::RowMajor> DG1_CG2_dY = (Eigen::Matrix<double, 9, 3, Eigen::RowMajor>() << -1.5000000000000004, 0.7500000000000002, 0.5000000000000002, -2.999999999999999, -1.1709383462843448e-17, 1.0, -1.5000000000000004, -0.7500000000000002, 0.5000000000000002, 0.0, 0.0, -0.5000000000000001, 0.0, 0.0, -1.0, 0.0, 0.0, -0.5000000000000001, 1.5000000000000002, -0.7500000000000001, 0.5000000000000002, 3.0, 1.5612511283791264e-17, 1.0, 1.5000000000000002, 0.7500000000000001, 0.5000000000000002).finished();

//------------------------------------
#endif
