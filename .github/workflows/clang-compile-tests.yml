name: compile code and tests

on:
  push:
    branches: [ main, develop, issue103_CI ]
  pull_request:
    branches: [ main, develop,  issue103_CI ]

jobs:

  clang-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: clang
      run: |
        brew install clang-format
        brew uninstall clang-format
        curl https://raw.githubusercontent.com/Homebrew/homebrew-core/8fa79e8a7cb2a63efd3eaedf41a2c04a38252efe/Formula/clang-format.rb > $(find $(brew --repository) -name clang-format.rb)
        brew install clang-format
        cd core/src
        clang-format --dry-run -Werror *cpp include/*hpp
        cd -
        for component in physics
        do
          cd $component/src
          clang-format --dry-run -Werror *cpp include/*hpp
          cd -
        done
  
  
  build-and-tests-on-ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        conda install libgcc
        conda install netCDF4=4.1.5
        conda install -c conda-forge boost=1.78.0
        conda install -c anaconda cmake=3.23.1
        conda install -c conda-forge catch2=2.9.13
        conda install -c conda-forge netcdf-cxx4
    - name: make
      run: |
        cmake .
        make
    - name: run tests
      run: |
        cd core/test
        for file in $(ls test*); do ./$file; done
        cd -
        for component in physics
        do
            cd $component/test
            for file in $(ls test*); do ./$file; done
            cd -
        done


  build-and-tests-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        conda install libgcc
        conda install netCDF4=4.1.5
        conda install -c conda-forge boost=1.78.0
        conda install -c anaconda cmake=3.23.1
        conda install -c conda-forge catch2=2.9.13
        conda install -c conda-forge netcdf-cxx4
    - name: make
      run: |
        cmake .
        make
    - name: run tests
      run: |
        cd core/test
        for file in $(ls test*); do ./$file; done
        cd -
        for component in physics
        do
            cd $component/test
            for file in $(ls test*); do ./$file; done
            cd -
        done
